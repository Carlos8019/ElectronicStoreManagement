// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dataAccess;

#nullable disable

namespace dataAccess.Migrations
{
    [DbContext(typeof(EsDbContext))]
    [Migration("20241106014208_MigrationName")]
    partial class MigrationName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("dataAccess.Models.Clients", b =>
                {
                    b.Property<int>("idClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("addressClient")
                        .HasColumnType("longtext");

                    b.Property<string>("emailClient")
                        .HasColumnType("longtext");

                    b.Property<string>("idnClient")
                        .HasColumnType("longtext");

                    b.Property<string>("nameClient")
                        .HasColumnType("longtext");

                    b.Property<string>("phoneClient")
                        .HasColumnType("longtext");

                    b.HasKey("idClient");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("dataAccess.Models.DeliveryTime", b =>
                {
                    b.Property<int>("idDeliveryTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("descriptionDeliveryTime")
                        .HasColumnType("longtext");

                    b.Property<string>("nameDeliveryTime")
                        .HasColumnType("longtext");

                    b.Property<int>("validityDays")
                        .HasColumnType("int");

                    b.HasKey("idDeliveryTime");

                    b.ToTable("DeliveryTime");
                });

            modelBuilder.Entity("dataAccess.Models.PaymentMode", b =>
                {
                    b.Property<int>("idPaymentMode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("descriptionPaymentMode")
                        .HasColumnType("longtext");

                    b.Property<string>("namePaymentMode")
                        .HasColumnType("longtext");

                    b.HasKey("idPaymentMode");

                    b.ToTable("PaymentMode");
                });

            modelBuilder.Entity("dataAccess.Models.Products", b =>
                {
                    b.Property<int>("idProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("descriptionProduct")
                        .HasColumnType("longtext");

                    b.Property<string>("nameProduct")
                        .HasColumnType("longtext");

                    b.Property<double>("priceProduct")
                        .HasColumnType("double");

                    b.HasKey("idProduct");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("dataAccess.Models.Services", b =>
                {
                    b.Property<int>("idService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("descriptionService")
                        .HasColumnType("longtext");

                    b.Property<string>("nameService")
                        .HasColumnType("longtext");

                    b.Property<double>("priceService")
                        .HasColumnType("double");

                    b.HasKey("idService");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("dataAccess.Models.UserProfile", b =>
                {
                    b.Property<int>("idProfile")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProfile");

                    b.Property<string>("descriptionProfile")
                        .HasColumnType("longtext")
                        .HasColumnName("descriptionProfile");

                    b.Property<string>("nameProfile")
                        .HasColumnType("longtext")
                        .HasColumnName("nameProfile");

                    b.HasKey("idProfile");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("dataAccess.Models.Users", b =>
                {
                    b.Property<int>("idUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.Property<int>("UserProfileidProfile")
                        .HasColumnType("int")
                        .HasColumnName("idProfile");

                    b.Property<string>("nameUser")
                        .HasColumnType("longtext")
                        .HasColumnName("nameUser");

                    b.Property<string>("passwordUser")
                        .HasColumnType("longtext")
                        .HasColumnName("passwordUser");

                    b.HasKey("idUser");

                    b.HasIndex("UserProfileidProfile");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("dataAccess.Models.Users", b =>
                {
                    b.HasOne("dataAccess.Models.UserProfile", "UserProfiles")
                        .WithMany()
                        .HasForeignKey("UserProfileidProfile")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfiles");
                });
#pragma warning restore 612, 618
        }
    }
}
